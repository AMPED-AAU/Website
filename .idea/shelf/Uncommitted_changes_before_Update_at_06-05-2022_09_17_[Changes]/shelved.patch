Index: amped/views/admin.pug
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#mySidenav.sidenav\r\n    a.closebtn(href='javascript:void(0)' onclick='closeNav()') &times;\r\n    a(href='/admingroups') Groups\r\n    a(href='#') Event\r\n    a(href='#') Log ud\r\nUse any element to open the sidenav\r\nspan(onclick='openNav()')\r\n#main\r\n\r\n    .row\r\n        .col-sm-1\r\n        .col-sm-4\r\n        .container\r\n            .users.col-md-11.col-xs-12.table-responsive\r\n                h1 Current Users\r\n                form.form(method=\"post\" action=\"/admin/groups\")\r\n                    table.col-xs-12\r\n                        tr\r\n                            th Id\r\n                            th Org\r\n                            th Om\r\n                            th Email\r\n                            th Facebook url\r\n                            th Password\r\n                            th Roles\r\n                            th\r\n                        each group in grouplist ? grouplist : []\r\n                            tr\r\n                                td #{group.id}\r\n                                td #{group.group_name}\r\n                                td #{group.group_about}\r\n                                td #{group.group_email}\r\n                                td #{group.fburl}\r\n                                td #{group.password}\r\n                                td #{group.roles}\r\n                                td\r\n\r\n                                    button.btn.btn-danger.col-xs-12 X\r\n        .col-sm-1\r\n        .col-sm-4\r\n            .sidebar\r\n                ol\r\n                    Events\r\n                        ol\r\n                            each event in eventlist ? eventlist : []\r\n                                p  Navn: #{event.event_name} Klubnavn: #{event.orgname} Event Type: #{event.event_type} Beskrivelse: #{event.beskrivelse} Lokation: #{event.lokation} Tid: #{event.tid} Dato: #{event.dato} Pris: #{event.pris} Facebook URL: #{event.fburl}\r\n        .col-sm-2
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amped/views/admin.pug b/amped/views/admin.pug
--- a/amped/views/admin.pug	(revision 5fbf9c6c8a3db7ce74c64782a29857d2b0f21020)
+++ b/amped/views/admin.pug	(date 1651821475275)
@@ -13,29 +13,7 @@
         .container
             .users.col-md-11.col-xs-12.table-responsive
                 h1 Current Users
-                form.form(method="post" action="/admin/groups")
-                    table.col-xs-12
-                        tr
-                            th Id
-                            th Org
-                            th Om
-                            th Email
-                            th Facebook url
-                            th Password
-                            th Roles
-                            th
-                        each group in grouplist ? grouplist : []
-                            tr
-                                td #{group.id}
-                                td #{group.group_name}
-                                td #{group.group_about}
-                                td #{group.group_email}
-                                td #{group.fburl}
-                                td #{group.password}
-                                td #{group.roles}
-                                td
 
-                                    button.btn.btn-danger.col-xs-12 X
         .col-sm-1
         .col-sm-4
             .sidebar
Index: amped/models/groups.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Sequelize = require(\"sequelize\");\r\nconst connection = require(\"../config\");\r\nconst express =require('express');\r\n\r\nconst Groups = connection.define(\"Groups\", {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        allowNull: false,\r\n        primaryKey: true,\r\n    },\r\n    group_name:{\r\n        type: Sequelize.STRING,\r\n        allowNull: false,\r\n        unique: true,\r\n    },\r\n    group_about:{\r\n        type: Sequelize.STRING,\r\n        allowNull: true,\r\n    },\r\n    group_email:{\r\n        type: Sequelize.STRING,\r\n        allowNull: false,\r\n    },\r\n    fburl:{\r\n        type: Sequelize.STRING,\r\n        allowNull: true,\r\n    },\r\n    password:{\r\n        type: Sequelize.STRING,\r\n        allowNull: false\r\n    },\r\n    roles:{\r\n        type: Sequelize.INTEGER,\r\n        allowNull: true,\r\n        default: 0,\r\n        \r\n}});\r\n\r\nmodule.exports = Groups;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amped/models/groups.js b/amped/models/groups.js
--- a/amped/models/groups.js	(revision 5fbf9c6c8a3db7ce74c64782a29857d2b0f21020)
+++ b/amped/models/groups.js	(date 1651763471466)
@@ -37,4 +37,6 @@
         
 }});
 
+
+
 module.exports = Groups;
\ No newline at end of file
Index: amped/controllers/searchcontroller.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Sequelize = require(\"sequelize\");\r\nconst {Datatypes, Op} = Sequelize;\r\nconst Events = require(\"../models/events\");\r\nconst Groups = require(\"../models/groups\");\r\n\r\n//det virker men searchss er undifined:\r\n\r\nexports.eventsearch = function (req, res, next){\r\n    //req.query fik det til at virke :D, req.body eller req.params virkede ikke\r\n   var searchInput = req.query.SearchName\r\n       return Events.findAll({\r\n           where:{\r\n               //Op.or signalere at vi retunere eventen det enten hvis event_name, eller orgname indeholder vores søgeord\r\n            [Op.or]: [\r\n                //% (procenttegn) signalere at søgerinputtet kan findes inde i et ord og bliver displayed\r\n                { event_name: { [Op.like]: `%${searchInput}%`}},\r\n                { orgname: { [Op.like]: `%${searchInput}%`}}\r\n            ]\r\n        }\r\n      })\r\n\r\n       .then(function(data) {\r\n       return res.render('events', {eventlist: data });\r\n    })\r\n    .catch( function(err)  {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\nexports.groupsearch = function (req, res, next){\r\n   var searchInput = req.query.SearchGroup\r\n       return Groups.findAll({\r\n           where:{\r\n            [Op.or]: [\r\n                { group_name: { [Op.like]: `%${searchInput}%`}},\r\n                { group_about: { [Op.like]: `%${searchInput}%`}}\r\n            ]\r\n        }\r\n      })\r\n       .then(function(data) {\r\n       return res.render('groups', {grouplist: data });\r\n    })\r\n    .catch( function(err)  {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\n//getting search input:\r\n/*exports.eventsearch = function (req, res, next){\r\n    var searchString = req.body.search\r\n    var searchfilter = Events.filter(function(req, res, next){\r\n      return Events.event_name.includes(searchString) || Events.orgname.includes(searchString)\r\n    })\r\n    res.render('search', {eventlist: searchfilter});\r\n}*/\r\n\r\n/*\r\nsearchbar = req.body.search\r\nsearchbar.addEventListener('keyup', function(req, res, next){\r\n    var searchString = searchfilter\r\n\r\n\r\n\r\nbutton.addEventListener('click', eventnamesearched);\r\nconst searchInput = Events.querySelector('.input')\r\n//defining button in use:\r\nexports.eventnamesearched =  function (req, res, next) {\r\n    \r\n    console.log(value);\r\n    //search result to lower case:\r\n    var Searchvalue = value.toLowerCase();\r\n    var name = event_name.toLowerCase();\r\n    \r\n    if (name.includes(Searchvalue)) {\r\n            return Events.findAll({ where: {name: name.includes(Searchvalue)}})\r\n                    .then(function(data) {\r\n                        res.render('events', {eventlist: data });\r\n                    });\r\n                }\r\n            \r\n}; \r\n\r\n/*\r\nconst Sequelize = require('sequelize');\r\nconst Events = require('../models/events');\r\nconst {Datatypes, Op} = Sequelize;\r\nconst Groups = require('../models/events');\r\n\r\nexports.eventsearch = function(req, res, next){\r\n\r\n    Events.findAll(where: { event_name: {}\r\n    })\r\n}\r\n*/\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amped/controllers/searchcontroller.js b/amped/controllers/searchcontroller.js
--- a/amped/controllers/searchcontroller.js	(revision 5fbf9c6c8a3db7ce74c64782a29857d2b0f21020)
+++ b/amped/controllers/searchcontroller.js	(date 1651763952643)
@@ -14,7 +14,6 @@
             [Op.or]: [
                 //% (procenttegn) signalere at søgerinputtet kan findes inde i et ord og bliver displayed
                 { event_name: { [Op.like]: `%${searchInput}%`}},
-                { orgname: { [Op.like]: `%${searchInput}%`}}
             ]
         }
       })
Index: amped/models/events.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Sequelize = require(\"sequelize\");\r\nconst connection = require(\"../config\");\r\nconst express = require('express');\r\nconst Groups = require(\"../models/groups\");\r\n\r\n\r\nconst Events = connection.define(\"Events\", {\r\n    id: {\r\n        type: Sequelize.INTEGER,\r\n        autoIncrement: true,\r\n        allowNull: false,\r\n        primaryKey: true,\r\n    },\r\n    event_name:{\r\n        type: Sequelize.STRING,\r\n        allowNull: false,\r\n    },\r\n    beskrivelse:{\r\n        type: Sequelize.STRING,\r\n        allowNull: true,\r\n    },\r\n    lokation:{\r\n        type: Sequelize.STRING,\r\n        allowNull: false,\r\n    },\r\n    tid:{\r\n        type: Sequelize.TIME,\r\n        allowNull: false,\r\n    },\r\n\r\n    dato:{\r\n        type: Sequelize.DATEONLY,\r\n        allowNull: false,\r\n        //defining dddd-mmmm-yyyy notation for date element\r\n        get: function() {\r\n            return this.getDataValue('dato')\r\n              .toLocaleString('dk-DK', { \r\n                day: 'numeric',\r\n                month: 'long',\r\n                year: 'numeric'\r\n            });\r\n          }\r\n          \r\n    },\r\n    pris:{\r\n        type: Sequelize.DECIMAL,\r\n        allowNull: true,\r\n    }\r\n    ,\r\n    fburl:{\r\n        type: Sequelize.STRING,\r\n        allowNull: true,\r\n    },\r\n    /* pic:{\r\n         type: Sequelize.BLOB,\r\n         allowNull: true,\r\n     },\r\n     */\r\n});\r\nmodule.exports = Events;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amped/models/events.js b/amped/models/events.js
--- a/amped/models/events.js	(revision 5fbf9c6c8a3db7ce74c64782a29857d2b0f21020)
+++ b/amped/models/events.js	(date 1651763471459)
@@ -57,4 +57,7 @@
      },
      */
 });
+Groups.hasMany(Events);
+Events.belongsTo(Groups);
+
 module.exports = Events;
\ No newline at end of file
